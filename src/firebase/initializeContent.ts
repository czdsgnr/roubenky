// src/firebase/initializeContent.ts
// Script pro inicializaci Firebase datab√°ze s v√Ωchoz√≠m obsahem

import { doc, setDoc, getDoc } from 'firebase/firestore';
import { db } from './firebase.config';
import { defaultContent } from './contentStructure';

export const initializeWebsiteContent = async (): Promise<boolean> => {
  try {
    console.log('üîÑ Inicializace obsahu webu...');
    
    const docRef = doc(db, 'website', 'content');
    const docSnap = await getDoc(docRef);
    
    if (!docSnap.exists()) {
      console.log('üìù Vytv√°≈ôen√≠ v√Ωchoz√≠ho obsahu...');
      await setDoc(docRef, defaultContent);
      console.log('‚úÖ V√Ωchoz√≠ obsah byl √∫spƒõ≈°nƒõ vytvo≈ôen!');
      
      // Ovƒõ≈ô√≠me, ≈æe se data skuteƒçnƒõ ulo≈æila
      const verifySnap = await getDoc(docRef);
      if (verifySnap.exists()) {
        console.log('‚úÖ Ovƒõ≈ôen√≠: Data byla √∫spƒõ≈°nƒõ ulo≈æena');
        return true;
      } else {
        console.error('‚ùå Ovƒõ≈ôen√≠ selhalo: Data se neulo≈æila');
        return false;
      }
    } else {
      console.log('‚ÑπÔ∏è Obsah ji≈æ existuje, inicializace dokonƒçena');
      return true;
    }
  } catch (error) {
    console.error('‚ùå Chyba p≈ôi inicializaci obsahu:', error);
    return false;
  }
};

// Funkce pro reset obsahu (pouze pro v√Ωvoj)
export const resetWebsiteContent = async () => {
  try {
    console.log('üîÑ Reset obsahu webu...');
    
    const docRef = doc(db, 'website', 'content');
    await setDoc(docRef, defaultContent);
    
    console.log('‚úÖ Obsah byl resetov√°n na v√Ωchoz√≠ hodnoty!');
    return true;
  } catch (error) {
    console.error('‚ùå Chyba p≈ôi resetu obsahu:', error);
    return false;
  }
};

// Funkce pro backup obsahu
export const backupWebsiteContent = async () => {
  try {
    console.log('üîÑ Z√°lohov√°n√≠ obsahu webu...');
    
    const docRef = doc(db, 'website', 'content');
    const docSnap = await getDoc(docRef);
    
    if (docSnap.exists()) {
      const content = docSnap.data();
      const timestamp = new Date().toISOString();
      
      const backupRef = doc(db, 'backups', `content-${timestamp}`);
      await setDoc(backupRef, {
        ...content,
        backupDate: timestamp,
        backupType: 'manual'
      });
      
      console.log('‚úÖ Z√°loha byla √∫spƒõ≈°nƒõ vytvo≈ôena!');
      return true;
    } else {
      console.log('‚ö†Ô∏è ≈Ω√°dn√Ω obsah k z√°lohov√°n√≠');
      return false;
    }
  } catch (error) {
    console.error('‚ùå Chyba p≈ôi z√°lohov√°n√≠:', error);
    return false;
  }
};

// Automatick√© spu≈°tƒõn√≠ inicializace p≈ôi importu (pouze v development)
if (process.env.NODE_ENV === 'development') {
  // M≈Ø≈æete odkomentovat pro automatickou inicializaci
  // initializeWebsiteContent();
}